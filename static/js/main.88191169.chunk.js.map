{"version":3,"sources":["icons/index.js","Player.js","stations.js","App.js","serviceWorker.js","index.js"],"names":["Stop","className","viewBox","fill","d","Play","Close","Player","props","togglePlaying","setState","prevState","playing","audioRef","React","createRef","state","initialPlaying","this","current","play","pause","ref","src","stream","streamUrl","onClick","name","onClose","Component","logo","App","index","setRadio","selected","radios","map","radio","key","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88191169.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Stop = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path fill=\"#000000\" d=\"M18,18H6V6H18V18Z\" />\n  </svg>\n);\n\nexport const Play = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path fill=\"#000000\" d=\"M8,5.14V19.14L19,12.14L8,5.14Z\" />\n  </svg>\n);\n\nexport const Close = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path\n      fill=\"currentColor\"\n      d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"\n    />\n  </svg>\n);\n","import React from \"react\";\nimport \"./Player.css\";\nimport { Play, Stop, Close } from \"./icons\";\n\nexport class Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.audioRef = React.createRef();\n    this.state = {\n      playing: props.initialPlaying ?? true\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.playing) {\n      this.audioRef.current.play();\n    } else {\n      this.audioRef.current.pause();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.playing) {\n      this.audioRef.current.play();\n    } else {\n      this.audioRef.current.pause();\n    }\n  }\n\n  togglePlaying = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      playing: !prevState.playing\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"Player\">\n        <audio ref={this.audioRef} src={this.props.stream.streamUrl} />\n        <div\n          className={\n            \"Player__button Player__flex-fixed\" +\n            (this.state.playing ? \" Player__button--playing\" : \"\")\n          }\n          onClick={this.togglePlaying}\n        >\n          {this.state.playing ? (\n            <Stop className=\"Player__icon\" />\n          ) : (\n            <Play className=\"Player__icon\" />\n          )}\n        </div>\n        <div className=\"Player__stream-name\">{this.props.stream.name}</div>\n        <div>\n          <span onClick={this.props.onClose} className=\"Player__close-button\">\n            <Close className=\"Player__icon\" />\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    name: \"Rádio Piešťany\",\n    logo: \"https://www.radia.sk/_radia/loga/nadpis/piestany.png\",\n    streamUrl: \"http://live.radiopiestany.sk:8000/stream.mp3\"\n  },\n  {\n    name: \"Fun Rádio\",\n    logo: \"https://www.radia.sk/_radia/loga/nadpis/fun.png\",\n    streamUrl: \"http://stream.funradio.sk:8000/fun64.mp3\"\n  },\n  {\n    name: \"Rádio Slovensko\",\n    logo: \"https://www.radia.sk/_radia/loga/nadpis/slovensko.png\",\n    streamUrl: \"http://icecast.stv.livebox.sk/slovensko_128.mp3\"\n  },\n  {\n    name: \"Rádio Pokoj\",\n    logo: \"https://www.radia.sk/_radia/loga/nadpis/pokoj.png\",\n    streamUrl: \"http://server1.internetoveradio.sk:8822/;\"\n  },\n  {\n    name: \"Rádio Jazz\",\n    logo: \"https://www.radia.sk/_radia/loga/nadpis/jazz.png\",\n    streamUrl: \"http://stream.radiojazz.sk:8000/jazz64.mp3\"\n  },\n  {\n    name: \"Rádio 7\",\n    logo: \"https://www.radia.sk/_radia/loga/nadpis/7.png\",\n    streamUrl: \"http://play.twr.sk:8000/64\"\n  },\n  {\n    name: \"Rádio Devín\",\n    logo: \"https://www.radia.sk/_radia/loga/nadpis/devin.png\",\n    streamUrl: \"http://icecast.stv.livebox.sk/devin_128.mp3\"\n  },\n  {\n    name: \"Rádio Vlna\",\n    logo: \"https://www.radia.sk/_radia/loga/nadpis/vlna.png\",\n    streamUrl: \"http://stream.radiovlna.sk/vlna-lo.mp3\"\n  }\n];\n","import React from \"react\";\nimport { Player } from \"./Player\";\nimport radios from \"./stations\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = { index: -1 };\n\n  setRadio = index => {\n    this.setState({ index });\n  };\n\n  render() {\n    const selected = this.state.index;\n\n    return (\n      <div className=\"App\">\n        <h1>Radio Stations</h1>\n        {radios.map((radio, index) => (\n          <div\n            className=\"App__radio\"\n            key={index}\n            onClick={() => this.setRadio(index)}\n          >\n            <div className=\"App__radio-logo\">\n              <img src={radio.logo} alt={radio.name} />\n            </div>\n            <div className=\"App__radio-name\">{radio.name}</div>\n          </div>\n        ))}\n        {selected >= 0 && (\n          <Player\n            stream={radios[selected]}\n            initialPlaying={true}\n            onClose={() => this.setRadio(-1)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}